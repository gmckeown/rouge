#requires -version 2.0
"String that accepts $variables and substitutions"
'Literal string $($PSScriptRoot)'
function Add-Extension
{
    param ([string]$Name,[string]$Extension = "txt")
    $name = $name + "." + $extension
    $name

    <#
    .SYNOPSIS

    Adds a file name extension to a supplied name.

    .DESCRIPTION

    Adds a file name extension to a supplied name.
    Takes any strings for the file name or extension.

    .PARAMETER Name
    Specifies the file name.

    .PARAMETER Extension
    Specifies the extension. "Txt" is the default.

    .INPUTS

    None. You cannot pipe objects to Add-Extension.

    .OUTPUTS

    System.String. Add-Extension returns a string with the extension
    or file name.

    .EXAMPLE

    PS> extension -name "File"
    File.txt

    .EXAMPLE

    PS> extension -name "File" -extension "doc"
    File.doc

    .EXAMPLE

    PS> extension "File" "doc"
    File.doc

    .LINK

    http://www.fabrikam.com/extension.html

    #>
}

# Multi
# Line
# Comment

<#
Second
Multi
Line
Comment
#>

Write-output "Hello" # Adding end-of-line comment

process {
$var1 = $var2
$var3 = get-host | Select-Object -First 1

if ($var1 -eq $var2)
{
    do-something
    return $false
}



"@
Heredoc string
continues on for a bit
"@


<#

things 

#>


try {
    write-output "something"
} catch {
    write-output "something else"
}

# Unapproved verb
Get-Process | Tee-Object -FilePath "C:\Test1\testfile2.txt"

Foreach ($Thing in $Things ) {
    Do-Something
}