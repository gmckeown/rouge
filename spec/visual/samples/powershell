#requires -version 2.0
# Normal Comment
<#
    multi
    line
    comment
#>
"String that accepts $variables, and substitutions"
"String with escaped `$variable"
'Literal string $($PSScriptRoot)'
@"
Heredoc with $variables
"@

@'
Heredoc with $literal strings
'@

$mydata = @{
    owner = "my"
    type = "hash"
    thing = "table"
}

type "is a reserved word"
alias foo bar

function Verb-Noun
{
    param ([string]$Name,
    [string]$Extension = "txt",[string]$foo="bar")
    $name = $name + "." + $extension
    $name
    # multi line comment with powershell document strings
    <#
    .SYNOPSIS

    Tells you what it does

    .DESCRIPTION

    Tells you what it does with more detail.

    #>
}


Write-output "Hello" # End-of-line comment

process {
"This is a script block"
$var3 = get-host | Select-Object -First 1

if ($var1 -eq $var2)
{
    return $true
}




try {
    write-output "something"
} catch {
    write-output "something else"
}

# Unapproved verb
Get-Process | Tee-Object -FilePath "C:\Test1\testfile2.txt"

Foreach ($Thing in $Things ) {
    Do-Something
}


# rouge-ruby/rouge#1025
[System.Collections.Generic.List[string]](1..100)
[System.Collections.Generic.Dictionary[string, int]](1..100|%{@{N=$_}})
$global:ErrorActionPreference
